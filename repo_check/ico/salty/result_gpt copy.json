{
  "\n    50% of the SALT Emissions - from the 51 million SALT designated as Emissions. \n    ": {
    "file": "repo_check/ico/salty/2024-01-salty/src/launch/InitialDistribution.sol",
    "isImp": false,
    "reason": "The smart contract transfers 52 million SALT to the Emissions, which is different from the 50% of 51 million (25.5 million) described in the whitepaper."
  },
  "\n    37.5% of the Arbitrage Profits - from profits generated by Automatic Atomic Arbitrage.\n    ": {
    "file": "repo_check/ico/salty/2024-01-salty/src/launch/InitialDistribution.sol",
    "isImp": false,
    "reason": "The provided smart contract does not include any logic related to Arbitrage Profits or Automatic Atomic Arbitrage. The contract primarily handles the distribution of tokens to various stakeholders, such as emissions, DAO Reserve, the initial development team, airdrop participants, and liquidity and staking bootstrapping. There is no mention or functionality for handling, calculating, or distributing arbitrage profits within the contract."
  },
  "\n    The arbitrage profits and SALT emissions are distributed to the liquidity pools proportionally based on each pool's contribution to generating arbitrage profit.  If a pool has contributed towards generating 10% of the arbitrage profits, it will receive 10% of the distributed profits and emissions. \n    ": {
    "file": "repo_check/ico/salty/2024-01-salty/src/launch/InitialDistribution.sol",
    "isImp": false,
    "reason": "The provided smart contract code does not contain any specific logic or function that handles the proportional distribution of arbitrage profits and SALT emissions to liquidity pools based on each pool's contribution to generating arbitrage profit. The code mainly focuses on initial token distribution, including transfers to various participants such as Emissions, DAO Reserve Vesting Wallet, Initial Development Team Vesting Wallet, and Airdrop participants, but lacks the mechanism described in the whitepaper for ongoing profit and emissions distribution to pools."
  },
  "\n   To reduce the inherent volatility of rewards emissions and make rewards more stable and predictable the rewards are emitted at a default rate of 0.75% per day of the current balance in the emitter (adjustable by the DAO).\n    ": {
    "file": "repo_check/ico/salty/2024-01-salty/src/launch/InitialDistribution.sol",
    "isImp": false,
    "reason": "The provided smart contract code snippet does not include a mechanism for controlling the emissions rate at a daily percentage nor does it include functionality to adjust these rates via the DAO. The specified behavior should be programmatically defined within the smart contract to realize such a tokenomic policy, but the code shared does not reflect this requirement."
  },
  "\nThe rewards are distributed to xSALT holders proportionally to the percent of xSALT they have compared to the total amount of xSALT that exists.  If a user has 1% of the total xSALT, then they will receive 1% of the rewards.\n    ": {
    "file": "repo_check/ico/salty/2024-01-salty/src/launch/InitialDistribution.sol",
    "isImp": false,
    "reason": "The given smart contract code does not implement any functionality relating to the distribution of rewards to xSALT holders based on their proportional ownership. The code provided shows the distribution of initial SALT tokens to various parties, such as emissions, DAO reserve, the initial development team, and airdrop participants, but does not include any logic for distributing ongoing rewards to xSALT holders proportionally."
  },
  "\n   bootstrappingRewards - the amount of SALT provided as a bootstrapping reward for a new pool when a new token is whitelisted.  Default: 200k SALT\n      ": {
    "file": "repo_check/ico/salty/2024-01-salty/src/launch/InitialDistribution.sol",
    "isImp": false,
    "reason": "The smart contract does not implement a mechanism to provide a bootstrapping reward for a new pool when a new token is whitelisted. The method 'distributionApproved()' transfers a fixed total of 8 million SALT to the saltRewards for liquidity and staking bootstrapping, but does not specify a default reward of 200k SALT per new pool when a new token is whitelisted."
  },
  "\npercentRewardsBurned - the percentage of SALT from arbitrage (excluding the upkeep reward) that is burned. Default: 10%\n   ": {
    "file": "repo_check/ico/salty/2024-01-salty/src/launch/InitialDistribution.sol",
    "isImp": false,
    "reason": "The smart contract provided does not implement any functionality related to 'percentRewardsBurned' or the burning of a percentage of SALT from arbitrage."
  },
  "\nbaseBallotQuorumPercent - the minimum amount of xSALT required for ballot quorum. Default 10%\n   ": {
    "file": "repo_check/ico/salty/2024-01-salty/src/launch/InitialDistribution.sol",
    "isImp": false,
    "reason": "The smart contract provided does not implement the 'baseBallotQuorumPercent' parameter or any voting quorum related logic. The examined contract focuses on initial distribution of tokens to various parties such as emissions, DAO, development team, airdrop participants, and liquidity and staking bootstrapping without mentioning or handling anything about a voting quorum."
  },
  "\nballotMinimumDuration - how many days minimum a ballot has to exist before it can be taken action on. Default: 10 days\n   ": {
    "file": "repo_check/ico/salty/2024-01-salty/src/launch/InitialDistribution.sol",
    "isImp": false,
    "reason": "The smart contract provided does not include any implementation of a 'ballotMinimumDuration' or a mechanism specifying a minimum duration for a ballot action. The contract mostly deals with the distribution of tokens to different parties (emissions, DAO, team, airdrop, and rewards system) after a distribution approval event, which is not related to the ballot duration mentioned in the description."
  },
  "\nrequiredProposalPercentStake - the percent of staked SALT that a user has to have to make a proposal. Default: .50%\n   ": {
    "file": "repo_check/ico/salty/2024-01-salty/src/launch/BootstrapBallot.sol",
    "isImp": false,
    "reason": "The smart contract provided does not include any logic or parameter related to 'requiredProposalPercentStake' or handle any operations concerning the percent of staked SALT that a user must have to make a proposal. The contract is designed to allow airdrop participants to vote on starting the exchange and does not appear to deal with proposal submission or staking thresholds for proposals."
  },
  "\npercentRewardsForReserve - the percentage of SALT from arbitrage (excluding the upkeep reward) that is sent to the DAO's reserve. Default: 10%\n   ": {
    "file": "repo_check/ico/salty/2024-01-salty/src/launch/BootstrapBallot.sol",
    "isImp": false,
    "reason": "The provided smart contract code for 'BootstrapBallot' does not contain any logic or reference to 'percentRewardsForReserve' or the percentage of SALT from arbitrage being sent to a DAO's reserve. The contract mainly focuses on the airdrop voting mechanism and starting up the exchange, but it lacks the specified tokenomics feature regarding distribution of arbitrage rewards to a reserve."
  },
  "\nupkeepRewardPercent - the share of the WETH arbitrage profits sent to the DAO that are sent to the caller of DAO.performUpkeep(). Default: 5%\n   ": {
    "file": "repo_check/ico/salty/2024-01-salty/src/launch/BootstrapBallot.sol",
    "isImp": false,
    "reason": "The provided smart contract does not implement any logic related to 'upkeepRewardPercent' or the distribution of WETH arbitrage profits to the DAO or callers of any upkeep function."
  },
  "\nballotMaximumDuration - how many days maximum a ballot can before it can be manually canceled by any user. Default: 30 days\n    ": {
    "file": "repo_check/ico/salty/2024-01-salty/src/launch/BootstrapBallot.sol",
    "isImp": false,
    "reason": "The smart contract provided does not include any functionality or variable to handle manual cancellation of a ballot or define a ballotMaximumDuration. It only specifies a completionTimestamp which indicates when the ballot process is completed, not a maximum duration for cancellation."
  },
  "maximumWhitelistedPools - the maximum number of pools that can be whitelisted at any one time. Default: 50": {
    "file": "repo_check/ico/salty/2024-01-salty/src/launch/BootstrapBallot.sol",
    "isImp": false,
    "reason": "The smart contract provided does not contain any implementation or reference to 'maximumWhitelistedPools' or functionality to limit the number of pools that can be whitelisted, contrary to the description provided."
  },
  "rewardsEmitterDailyPercentTimes1000 - the target daily percent of rewards distributed by the stakingRewardsEmitter and liquidityRewardsEmitter. Default: 1%": {
    "file": "repo_check/ico/salty/2024-01-salty/src/launch/BootstrapBallot.sol",
    "isImp": false,
    "reason": "The smart contract provided does not mention or implement a rewards emission functionality using a variable like 'rewardsEmitterDailyPercentTimes1000', nor does it have sections dealing with stakingRewardsEmitter or liquidityRewardsEmitter. Thus, the smart contract does not implement the tokenomics described in the whitepaper regarding the target daily percent of rewards distribution."
  },
  "emissionsWeeklyPercentTimes1000 - the weekly percent of SALT emissions that will be distributed from the Emissions contract. Default: .5%": {
    "file": "repo_check/ico/salty/2024-01-salty/src/launch/BootstrapBallot.sol",
    "isImp": false,
    "reason": "The provided smart contract's code does not contain any parameter or function related to 'emissionsWeeklyPercentTimes1000' or weekly SALT emissions distribution from an Emissions contract. The contract focuses on a voting mechanism for airdrop participants and starting up the exchange rather than token emissions."
  },
  "stakingRewardsPercent - the percentage of rewards received by SALT stakers (compared to liquidity providers). Default: 50%": {
    "file": "repo_check/ico/salty/2024-01-salty/src/launch/BootstrapBallot.sol",
    "isImp": false,
    "reason": "The smart contract code does not mention or implement any logic related to 'stakingRewardsPercent' or the rewards distribution between SALT stakers and liquidity providers. The smart contract is primarily concerned with the airdrop voting process through the BootstrapBallot."
  },
  "minUnstakeWeeks - the minimum number of weeks for an unstake request at which point minUnstakePercent of the original staked SALT is reclaimable. Default: 2 weeks": {
    "file": "repo_check/ico/salty/2024-01-salty/src/launch/BootstrapBallot.sol",
    "isImp": false,
    "reason": "The smart contract provided does not implement any functionality related to minUnstakeWeeks or handling unstake requests. It is a contract for voting on whether or not to start an exchange and does not include tokenomics details like unstaking periods or percentages."
  },
  "maxUnstakeWeeks - the maximum number of weeks for an unstake request at which point 100% of the original staked SALT is reclaimable. Default: 52 weeks": {
    "file": "repo_check/ico/salty/2024-01-salty/src/launch/BootstrapBallot.sol",
    "isImp": false,
    "reason": "The smart contract code provided does not contain any reference to a 'maxUnstakeWeeks' parameter or functionality related to unstaking or reclaiming staked tokens. It seems to be focused on vote casting for starting an exchange and airdrop authorization, with no mention of staking mechanisms."
  },
  "minUnstakePercent - the percentage of the original staked SALT that is reclaimable when unstaking the minimum number of weeks. Default: 20%": {
    "file": "repo_check/ico/salty/2024-01-salty/src/launch/BootstrapBallot.sol",
    "isImp": false,
    "reason": "The provided smart contract does not include the implementation of a 'minUnstakePercent' feature related to unstaking SALT tokens."
  },
  "modificationCooldown - the minimum time between staking and unstaking or between depositing and withdrawing liquidity (to avoid rewards sniping). Default: 1 hour": {
    "file": "repo_check/ico/salty/2024-01-salty/src/launch/BootstrapBallot.sol",
    "isImp": false,
    "reason": "The provided smart contract BootstrapBallot does not include any reference to 'modificationCooldown' nor does it implement any functionality related to staking or unstaking, or depositing or withdrawing liquidity. Its primary function is to facilitate voting on whether to start the exchange and to authorize airdrop recipients."
  },
  "In order to incentivize upkeep being done, users calling performUpkeep receive 5% of the arbitrage profits that have been generated since the last call to performUpkeep (rate adjustable by the DAO).  This incentivizes upkeep to be dependent on the activity of the exchange itself.": {
    "file": "repo_check/ico/salty/2024-01-salty/src/launch/BootstrapBallot.sol",
    "isImp": false,
    "reason": "The provided smart contract BootstrapBallot does not contain any functions or mechanisms related to performUpkeep or distributing a percentage of arbitrage profits to users. The smart contract focuses on voting whether to start the exchange and initial geographical restrictions."
  },
  "A default 9.5% of all arbitrage profits (which are generated in WETH) are swapped to SALT and burned.": {
    "file": "repo_check/ico/salty/2024-01-salty/src/launch/BootstrapBallot.sol",
    "isImp": false,
    "reason": "The provided smart contract code is related to a voting mechanism for airdrop participants and does not include functionality related to arbitrage profits, token swapping, or the burning of SALT tokens."
  },
  "Bootstrapping Rewards (200k SALT per pool*)  - established when a pool is whitelisted.": {
    "file": "repo_check/ico/salty/2024-01-salty/src/launch/BootstrapBallot.sol",
    "isImp": false,
    "reason": "The smart contract provided does not contain any direct logic or parameters indicating the distribution or setting of Bootstrapping Rewards (200k SALT per pool) upon a pool being whitelisted. The contract is mainly related to the voting process to start the exchange and does not implement the bootstrapping rewards as described."
  },
  "The SALT token is an ERC20 utility and governance token on Ethereum with a 100 million maximum supply.": {
    "file": "repo_check/ico/salty/2024-01-salty/src/launch/BootstrapBallot.sol",
    "isImp": false,
    "reason": "The provided smart contract code does not include any ERC20 token implementation or any details about the maximum supply of a token named SALT. It focuses on a BootstrapBallot system for airdrop participants."
  }
}